<?php
/**
 * Application model for CakePHP.
 *
 * This file is application-wide model file. You can put all
 * application-wide model-related methods here.
 *
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @package       app.Model
 * @since         CakePHP(tm) v 0.2.9
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */

App::uses('Model', 'Model');

/**
 * Application model for Cake.
 *
 * Add your application-wide methods in the class below, your models
 * will inherit them.
 *
 * @package       app.Model
 */
class AppModel extends Model
{
	public $locale = "en-US";

	protected $multiLanguageTransactionStarted = false;
	protected $multiLanguageTransactionEnded = false;
	
	public function setLanguage($locale)
	{
		$this->locale = $locale;
	}
	
	public function getNextAutoIncrementValue()
	{
		$data = $this->query("SHOW TABLE STATUS LIKE '{$this->useTable}'");
		return $data[0]["TABLES"]["Auto_increment"];
	}

	public function multiLanguageTransaction($status = null)
	{
		if (strval($status) == 'start')
			$this->multiLanguageTransactionStarted = true;
		elseif (strval($status) == 'end')
			$this->multiLanguageTransactionEnded = true;

		// 0 = not started
		// 1 = started, but has not finished yet.
		// 2 = started and finished.
		if ($this->multiLanguageTransactionStarted && !$this->multiLanguageTransactionEnded)
			return 1;
		elseif ($this->multiLanguageTransactionStarted && $this->multiLanguageTransactionEnded)
			return 2;
		else
			return 0;
	}

	public function resetMultiLanguageTransaction()
	{
		$this->multiLanguageTransactionStarted = false;
		$this->multiLanguageTransactionEnded = false;
	}
}